<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第二篇文章</title>
      <link href="/2023/08/01/2023-8-1%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/08/01/2023-8-1%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我第二篇文章"><a href="#这是我第二篇文章" class="headerlink" title="这是我第二篇文章"></a>这是我第二篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7安装docker</title>
      <link href="/2023/08/01/CentOS7%E5%AE%89%E8%A3%85docker/"/>
      <url>/2023/08/01/CentOS7%E5%AE%89%E8%A3%85docker/</url>
      
        <content type="html"><![CDATA[<h2 id="一、安装前必读"><a href="#一、安装前必读" class="headerlink" title="一、安装前必读"></a>一、安装前必读</h2><p><strong>1.查看当前的内核版本</strong> </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><p><strong>2.使用 root 权限更新 yum 包（生产环境中此步操作需慎重，看自己情况）</strong></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br><span class="line">这个命令不是必须执行的，看个人情况，后面出现不兼容的情况的话就必须update了 </span><br></pre></td></tr></table></figure><p> <strong>3.卸载旧版本（如果之前安装过的话）</strong> </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="comment">remove docker  docker-common docker-selinux docker-engine</span></span><br></pre></td></tr></table></figure><h2 id="二、安装Docker的详细步骤"><a href="#二、安装Docker的详细步骤" class="headerlink" title="二、安装Docker的详细步骤"></a>二、安装Docker的详细步骤</h2><p><strong>1.安装需要的软件包， yum-util 提供yum-config-manager功能，另两个是devicemapper驱动依赖</strong> </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-<span class="keyword">data</span> lvm2</span><br></pre></td></tr></table></figure><p><strong>2.设置一个<a href="https://so.csdn.net/so/search?q=yum&amp;spm=1001.2101.3001.7020">yum</a>源，也就是docker ce软件源（看个人习惯，我喜欢用阿里云的）</strong></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.<span class="keyword">com</span>/docker-ce/linux/centos/docker-ce.repo  （阿里仓库）</span><br></pre></td></tr></table></figure><p><img src="../_posts/assets/1688024837034.png" alt="1688024837034"></p><p><strong>3.选择docker版本并安装（安装 docker-ce（社区版））</strong> </p><p>（1）查看可用版本有哪些 </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">list</span> docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p><img src="../_posts/assets/1688025070000.png" alt="1688025070000"></p><p>（2）选择一个版本并安装：<strong>yum install docker-ce-版本号</strong>  </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker-ce-<span class="number">18.03</span>.<span class="number">1</span>.ce         ---我是下载了这个版本号根据自己喜欢。</span><br><span class="line">提醒：如果没有指定版本号的话，系统是默认下载最新的版本号</span><br><span class="line">命令：yum -y  install docker-ce</span><br></pre></td></tr></table></figure><p><img src="../_posts/assets/1688025491959.png" alt="1688025491959"></p><p>（3）查看是否安装成功 </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查看版本：docker version</span><br></pre></td></tr></table></figure><p><img src="../_posts/assets/1688025629858.png" alt="1688025629858"></p><p>（4）查看Docker的运行状态（一般刚安装好的话都是running状态的） </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br><span class="line">启动命令：systemctl start docker</span><br><span class="line">停止命令：systemctl <span class="keyword">stop</span> docker</span><br><span class="line">设置开机启动：systemctl enable docker</span><br></pre></td></tr></table></figure><p><strong>4.配置Docker镜像加速器（阿里云）</strong> </p><p> <strong>！！因为docker下载镜像是从docker hub中下载，是国外的，所以下载比较慢，可以看作maven</strong> </p><p>（1）去到阿里云官方网址，找到容器镜像服务：<a href="https://www.aliyun.com">https://www.aliyun.com</a></p><p>（2）进入管理控制台（这里没有开通服务的需要开通一下容器服务）</p><p>（3）点击镜像加速器，选择CentOS</p><p><img src="../_posts/assets/1688026052250.png" alt="1688026052250"></p><p>（4）（注意每个人的配置加速器的都会随机生成的，所以根据你打开后阿里云镜像加速器提供的代码进行配置）<strong>（执行文件后会自动生成daemon.json文件）</strong> </p><p><img src="../_posts/assets/1688026377763.png" alt="1688026377763"></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">mkdir</span> -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="comment">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://9ok4m91z.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">EOF</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p><img src="../_posts/assets/1688026481344.png" alt="1688026481344"></p><p><strong>5.使用hello-world镜像测试docker</strong> </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">运行命令：docker <span class="keyword">run</span> hello-world</span><br></pre></td></tr></table></figure><p><img src="../_posts/assets/1688027633566.png" alt="1688027633566"></p><p>（1）docker run运行思维导图 </p><p><img src="../_posts/assets/1688056644126.png" alt="1688056644126"></p><p>（2）查看镜像  </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="../_posts/assets/1688027684653.png" alt="1688027684653"></p><p>以看到刚才在执行docker run hello-world的时候，已经将hello-world镜像拉去到本地镜像中了 </p><h2 id="三丶常用的操作命令"><a href="#三丶常用的操作命令" class="headerlink" title="三丶常用的操作命令"></a>三丶常用的操作命令</h2><p>1.启动与停止命令 </p><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">systemctl start docker</td><td style="text-align:center">启动Docker</td></tr><tr><td style="text-align:center">systemctl stop docker</td><td style="text-align:center">停止Docker</td></tr><tr><td style="text-align:center">systemctl stauts docker</td><td style="text-align:center">查看Docker状态</td></tr><tr><td style="text-align:center">systemctl restart docker</td><td style="text-align:center">重启docker</td></tr><tr><td style="text-align:center">systemctl enable docker</td><td style="text-align:center">开机启动</td></tr><tr><td style="text-align:center">docker info</td><td style="text-align:center">查看docker概要信息</td></tr><tr><td style="text-align:center">docker —help</td><td style="text-align:center">查看docker帮助文档</td></tr></tbody></table></div><p> 2.镜像相关命令 </p><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">docker imager</td><td style="text-align:center">查看本地存在的镜像</td></tr><tr><td style="text-align:center">docker search 镜像名称</td><td style="text-align:center">从网络中查找需要的镜像</td></tr><tr><td style="text-align:center">docker pull 镜像名称</td><td style="text-align:center">将远程镜像拉到本地</td></tr><tr><td style="text-align:center">docker rmi [-f] 镜像ID</td><td style="text-align:center">（强制）删除本地镜像</td></tr><tr><td style="text-align:center">docker rmi -f 镜像名1 :TAG 镜像名2:TAG</td><td style="text-align:center">删除多个镜像</td></tr></tbody></table></div><h4 id="至此centos7安装Docker就完成了。"><a href="#至此centos7安装Docker就完成了。" class="headerlink" title="至此centos7安装Docker就完成了。"></a>至此centos7安装Docker就完成了。</h4>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/07/31/2023-7-31%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/07/31/2023-7-31%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我第一篇文章"><a href="#这是我第一篇文章" class="headerlink" title="这是我第一篇文章"></a>这是我第一篇文章</h2><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-08-2 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div></div>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
